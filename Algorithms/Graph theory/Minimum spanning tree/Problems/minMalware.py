class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        def find(x):
            if x != parents[x]:
                parents[x] = find(parents[x])
            return parents[x] ### ALWAYS RETURN PARENT[x] NOT X

        def union(x, y):
            parents[find(x)] = find(y)
        # init
        n = len(graph)
        parents = list(range(n))

        for i in range(n):
            for j in range(i + 1, n):
                if graph[i][j] == 1:
                    union(i, j)

        size = Counter(find(i) for i in range(n))
        malwares = Counter(find(i) for i in initial)

        m, remove = 0, min(initial)
        for i in initial:
            if malwares[find(i)] == 1:
                if size[find(i)] > m:
                    m, remove = size[find(i)], i
                elif size[find(i)] == m:
                    remove = min(remove, i)

        return remove
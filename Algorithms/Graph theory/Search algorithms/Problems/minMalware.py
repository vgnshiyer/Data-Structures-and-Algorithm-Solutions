def minMalwareSpread(graph: List[List[int]], initial: List[int]) -> int:
    n = len(graph)
    initial = set(initial)
    visited = set()

    hm = {}
    def dfs(i, temp):
        visited.add(i)

        temp[0] += int(i in initial)
        temp[1] += 1
        for j in range(n):
            if j != i and graph[i][j]:
                if j not in visited:
                    dfs(j, temp)
        hm[i] = temp

    m = 0
    for inf_node in initial:
        if inf_node not in hm:
            dfs(inf_node, [0, 0])
            m += hm[inf_node][1]

    remove_node = inf
    maxSize = inf

    for inf_node in initial:
        num_inf_nodes, component_size = hm[inf_node]
        best_possible = m
        if num_inf_nodes == 1:
            best_possible = m - component_size

        if best_possible < maxSize:
            maxSize = best_possible
            remove_node = inf_node
        elif best_possible == maxSize and inf_node < remove_node:
            remove_node = inf_node

    return remove_node